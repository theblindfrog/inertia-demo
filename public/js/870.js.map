{"version":3,"file":"js/870.js?id=bcfbfb1cf40bc1047d21","mappings":"mKAKMA,EAAU,WACd,OAAwEC,EAAAA,EAAAA,IAAQ,CAC9EC,KAAM,GACNC,MAAO,GACPC,UAAU,IAHJC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,KAAMC,EAA7B,EAA6BA,WAAYC,EAAzC,EAAyCA,OAAQC,EAAjD,EAAiDA,YAAaC,EAA9D,EAA8DA,MAMtDC,GAAUC,EAAAA,EAAAA,MAAUC,MAApBF,MAaR,OACE,gCAGGA,EAAMG,UACL,gBAAKC,UAAU,0DAA0DC,KAAK,QAA9E,UACE,cAAGD,UAAU,qCAAb,SACGJ,EAAMG,aAMb,kBACEG,SAzBN,SAAsBC,GACpBA,EAAEC,iBACFV,IAEAH,EAAKc,MAAM,mBAAoB,CAC7BC,UAAW,WACTX,QAoBAY,OAAO,OACPP,UAAU,qBAHZ,WAKE,4BACE,kBACEQ,QAAQ,OACRR,UAAU,0CAFZ,mBAMA,gBAAKA,UAAU,qCAAf,UACE,kBACES,KAAK,OACLvB,KAAK,OACLwB,GAAG,OACHC,YAAY,aACZ,eAAa,OACb,mBAAiB,aACjBC,MAAOvB,EAAKH,KACZ2B,SAAU,SAAAV,GAAC,OAAIb,EAAQ,OAAQa,EAAEW,OAAOF,QACxCZ,UAAS,uBACSP,EAAOP,KAAO,QAAU,QAI7CO,EAAOP,OACN,cACEc,UAAU,4BACVU,GAAG,aAFL,SAIGjB,EAAOP,WAKd,4BACE,kBACEsB,QAAQ,QACRR,UAAU,0CAFZ,oBAMA,gBAAKA,UAAU,qCAAf,UACE,gBAAKA,UAAU,qCAAf,UACE,kBACES,KAAK,OACLvB,KAAK,QACLwB,GAAG,QACHC,YAAY,qBACZ,eAAa,OACb,mBAAiB,cACjBC,MAAOvB,EAAKF,MACZ0B,SAAU,SAAAV,GAAC,OAAIb,EAAQ,QAASa,EAAEW,OAAOF,QACzCZ,UAAS,uBACSP,EAAON,MAAQ,QAAU,UAKhDM,EAAON,QACN,cACEa,UAAU,4BACVU,GAAG,cAFL,SAIGjB,EAAON,YAKd,iBAAKa,UAAU,iBAAf,WACE,mBAAQS,KAAK,SAAST,UAAU,SAASe,SAAUvB,EAAnD,yBAGA,mBAAQiB,KAAK,QAAQT,UAAU,gBAAgBe,SAAUvB,EAAYwB,QAAS,kBAAMrB,KAApF,6BAUVX,EAAQiC,OAAS,SAAAC,GAAI,OAAI,SAAC,UAAD,CAAQC,SAAUD,EAAME,MAAM,gBAEvD","sources":["webpack:///./resources/js/Pages/Contact.jsx"],"sourcesContent":["import { Inertia } from \"@inertiajs/inertia\";\nimport React, { useState } from \"react\";\nimport { useForm, usePage } from \"@inertiajs/inertia-react\";\nimport Layout from \"./Layout\";\n\nconst Contact = () => {\n  const { data, setData, post, processing, errors, clearErrors, reset } = useForm({\n    name: \"\",\n    email: \"\",\n    remember: true\n  });\n\n  const { flash } = usePage().props\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    clearErrors();\n\n    post(route('contactus.store'), {\n      onSuccess: () => {\n        reset();\n      }\n    });\n  }\n\n  return (\n    <>\n      {/* <h1 className=\"text-xl font-bold mb-4\">Contact Us</h1> */}\n\n      {flash.message && (\n        <div className=\"rounded-md bg-green-50 border-green-100 border p-4 my-2\" role=\"alert\">\n          <p className=\"text-sm font-medium text-green-800\">\n            {flash.message}\n          </p>\n        </div>\n      )}\n\n\n      <form\n        onSubmit={handleSubmit}\n        method=\"post\"\n        className=\"space-y-4 max-w-lg\"\n      >\n        <div>\n          <label\n            htmlFor=\"name\"\n            className=\"block text-sm font-medium text-gray-700\"\n          >\n            Name\n          </label>\n          <div className=\"mt-1 relative rounded-md shadow-sm\">\n            <input\n              type=\"text\"\n              name=\"name\"\n              id=\"name\"\n              placeholder=\"Alex Smith\"\n              aria-invalid=\"true\"\n              aria-describedby=\"name-error\"\n              value={data.name}\n              onChange={e => setData(\"name\", e.target.value)}\n              className={\n                `form-control ${errors.name ? \"error\" : \"\"}`\n              }\n            />\n          </div>\n          {errors.name && (\n            <p\n              className=\"mt-2 text-sm text-red-600\"\n              id=\"name-error\"\n            >\n              {errors.name}\n            </p>\n          )}\n        </div>\n\n        <div>\n          <label\n            htmlFor=\"email\"\n            className=\"block text-sm font-medium text-gray-700\"\n          >\n            Email\n          </label>\n          <div className=\"mt-1 relative rounded-md shadow-sm\">\n            <div className=\"mt-1 relative rounded-md shadow-sm\">\n              <input\n                type=\"text\"\n                name=\"email\"\n                id=\"email\"\n                placeholder=\"asmith@example.net\"\n                aria-invalid=\"true\"\n                aria-describedby=\"email-error\"\n                value={data.email}\n                onChange={e => setData(\"email\", e.target.value)}\n                className={\n                  `form-control ${errors.email ? \"error\" : \"\"}`\n                }\n              />\n            </div>\n          </div>\n          {errors.email && (\n            <p\n              className=\"mt-2 text-sm text-red-600\"\n              id=\"email-error\"\n            >\n              {errors.email}\n            </p>\n          )}\n        </div>\n\n        <div className=\"space-x-6 mt-2\">\n          <button type=\"submit\" className=\"button\" disabled={processing}>\n            Contact Us\n          </button>\n          <button type=\"reset\" className=\"text-gray-500\" disabled={processing} onClick={() => reset()}>\n            Reset\n          </button>\n        </div>\n      </form>\n    </>\n  );\n}\n\n\nContact.layout = page => <Layout children={page} title=\"Contact Us\" />;\n\nexport default Contact;"],"names":["Contact","useForm","name","email","remember","data","setData","post","processing","errors","clearErrors","reset","flash","usePage","props","message","className","role","onSubmit","e","preventDefault","route","onSuccess","method","htmlFor","type","id","placeholder","value","onChange","target","disabled","onClick","layout","page","children","title"],"sourceRoot":""}